"Make bash aliases available
let $BASH_ENV = "~/.bash_aliases"
"let $BASH_ENV='~/.bashrc'

" vim: filetype=vifm :
" You can edit this file by hand.
" The " character at the beginning of a line comments out the line.
" Blank lines are ignored.
" The basic format for each item is shown with an example.

" This is the actual command used to start vi.  The default is vim.
" If you would like to use another vi clone such Elvis or Vile
" you will need to change this setting.

set vicmd=vim
" set vicmd=elvis\ -G\ termcap
" set vicmd=vile

"Don not automatically select matched files after search
set nohlsearch
windo set viewcolumns=-{name},7{size},-13{mtime}
"Show hidden files at as default
windo normal zo
set vimhelp
set wildmenu
"set ignorecase
"set smartcase
"[f - flag] - running vifm-:filter command results in not inverted
"	      (matching files are filtered out) and :filter! in inverted (matching files
"   	      are left) filter, when omitted, meaning of the exclamation mark changes to
"    	      the opposite;
"[t - flag] - when included, <tab> (thus <c-i>) behave as <space> and switch active
"	      pane, otherwise <c-i> goes forward in the view history.
"	      set cpoptions="fs"
"[s - flag] - when included, vifm-yy, vifm-dd and vifm-DD normal mode commands act on
"	      selection, otherwise they operate on current file only;
set cpoptions="fs"

"set statusline='%-30t%-20E%-30A%u:%g'

set statusline="  %t%= %A %10u:%-7g %15E %20d  "
set rulerformat="%l/%-5SF:%-5-T:%L"

" Trash Directory
" The default is to move files that are deleted with dd or :d to
" the trash directory.  If you change this you will not be able to move
" files by deleting them and then using p to put the file in the new location.
" I recommend not changing this until you are familiar with vifm.
" This probably shouldn't be an option.

set trash

" This is how many directories to store in the directory history.

set history=15

" Follow links on l or Enter.

set followlinks

" With this option turned on you can run partially entered commands with
" unambiguous beginning using :! (e.g. :!Te instead of :!Terminal or :!Te<tab>).

set nofastrun

set grepprg=ack-grep\ -H\ -r\ %i\ %a\ %s
set scrolloff=999

" Natural sort of (version) numbers within text.

set nosortnumbers

" Progress bar enable
set syscalls

" Ask for confirmation in case of permanent delete
set confirm cf

" Maximum number of changes that can be undone.

set undolevels=100

" If you installed the vim.txt help file set vimhelp.
" If would rather use a plain text help file set novimhelp.

set vimhelp

" If you would like to run an executable file when you
" press return on the file name set this.

set norunexec

" Use KiB, MiB, ... instead of K, M, ...

set noiec

" Use increment searching (search while typing)
set incsearch

" Selected color zenburn_1
colorscheme Default

" Don't do too many requests to slow file systems
set slowfs=curlftpfs

" The FUSE_HOME directory will be used as a root dir for all FUSE mounts.
" Unless it exists with write/exec permissions set, vifm will attempt to
" create it.

set fusehome=/tmp/vifm_FUSE


"SSHMount
:filetype *.ssh FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR %CLEAR

" FtpMount
filetype *.ftp
       \ {Mount with CurlFtpFS}
       \ FUSE_MOUNT2|curlftpfs -o ftp_port=-,,disable_eprt %PARAM %DESTINATION_DIR %CLEAR,

" Format for displaying time in file list. For example:
" set timefmt=%m/%d-%H:%M
" See man date or man strftime for details.

set timefmt=\ "%d/%m/%y\ %H:%M"
""set timefmt=\ %m/%d\ %H:%M


" set color theme
" https://github.com/jubalh/vifm-colors
colorscheme zenburn_1

" :mark mark /full/directory/path [filename]

 mark r /
 mark u /usr
 mark h $HOME ../
 mark V $HOME/.vifm ../
 mark v $HOME/.vim ../
 mark h ~
 mark t /tmp
 mark D ~/Documents
 mark d ~/Downloads
 mark c ~/.dotfiles
 mark s ~/.ssh
 mark p ~/Projects
 mark P ~/Pictures

" :com[mand] command_name action
" The following macros can be used in a command
" %a is replaced with the user arguments.
" %c the current file under the cursor.
" %C the current file under the cursor in the other directory.
" %f the current selected file, or files.
" %F the current selected file, or files in the other directory.
" %b same as %f %F.
" %d the current directory name.
" %D the other window directory name.
" %m run the command in a menu window

command! blender :!blender %c %i
command! feh :!feh -r --scale-down %f &
command! gimp :!gimp %f &
command! vlc :!vlc %f &
command! inkscape :!inkscape %f &
command! audacity :!audacity %f &
command! fileroller :!file-roller %f &
command! thunar :!thunar &
command! df df -h %m 2> /dev/null
command! diff vim -c 'set diffopt+=iwhite' -d %f %F
command! zip zip -r %f.zip %f
command! run !! ./%f
command! surun !! sudo ./%f
command! make !!make %a
command! mkcd :mkdir %a | cd %a
command! vgrep vim "+grep %a"
command! todo :!tudu
command! tudu :!tudu
command! reload :write | restart

" extract selected files from archive we're exploring right now
command! extractfiles :execute "! $VIFM/scripts/extract_files.sh" &fusehome expand('%D') expand('%f:p')

command! navigation :execute '!navigation.sh' %a paneisat('top') paneisat('left') layoutis('vsplit') layoutis('hsplit')
command! navVsplitLeft :if layoutis('vsplit') == 1 | navLeft | else | execute "!tmux_sys_win_aware_navigation.sh 'left' 'tmux-only' &" | endif
command! navLeft :if paneisat('left') == 0 | execute "wincmd h" | else | execute "!tmux_sys_win_aware_navigation.sh 'left' 'tmux-only' &" | endif

command! navVsplitRight :if layoutis('vsplit') == 1 | navRight | else | execute "!tmux_sys_win_aware_navigation.sh 'right' 'tmux-only' &" | endif
command! navRight :if paneisat('left') == 1 | execute "wincmd l" | else | execute "!tmux_sys_win_aware_navigation.sh 'right' 'tmux-only' &" | endif

command! navSplitDown :if layoutis('hsplit') == 1 | navDown | else | execute "!tmux_sys_win_aware_navigation.sh 'down' 'tmux-only' &" | endif
command! navDown :if paneisat('up') == 1 | execute "wincmd j" | else | execute "!tmux_sys_win_aware_navigation.sh 'down' 'tmux-only' &" | endif

command! navSplitUp :if layoutis('hsplit') == 1 | navUp | else | execute "!tmux_sys_win_aware_navigation.sh 'up' 'tmux-only' &" | endif
command! navUp :if paneisat('up') == 0 | execute "wincmd k" | else | execute "!tmux_sys_win_aware_navigation.sh 'up' 'tmux-only' &" | endif
" Toggle visibility of preview window
nnoremap w :view<cr>
vnoremap w :view<cr>gv

" Open file in existing instance of gvim
nnoremap o :!gvim --remote-tab-silent %f %i &<cr>

" Open file in new instance of gvim
nnoremap O :!gvim %f %i &<cr>

" Open file in the background using its default program
nnoremap ib :file &<cr>l

" Yank current directory path into the clipboard
map yd :!echo %d:gs? ?[:SPACE:]? | $VIFM/scripts/listsToClipboard.sh %i<cr>

" Yank current absolute file path into the clipboard
map yf :!echo %f:p:gs? ?[:SPACE:]? | $VIFM/scripts/listsToClipboard.sh %i <cr>

" Yank current relative file path into the clipboard
map yF :!echo %f:gs? ?[:SPACE:]? | $VIFM/scripts/listsToClipboard.sh %i<cr>


" Mappings for faster renaming
nnoremap I cw<c-a>
nnoremap cc cw<c-u>
nnoremap A cW

" Open vim to edit vifmrc and apply settings after returning to vifm
nnoremap ,c :write | execute ':!vim $MYVIFMRC' | restart<cr>
" Open gvim to edit vifmrc
nnoremap ,C :!gvim --remote-tab-silent $MYVIFMRC &<cr>

" Example of standard two-panel file managers mappings
nnoremap <f3> :!less %f<cr>
nnoremap <f4> :edit<cr>
nnoremap <f5> :copy<cr>
nnoremap <f6> :move<cr>
nnoremap <f7> :mkdir<space>
nnoremap <f8> :delete<cr>

"Repeat last 'find first character'
nnoremap <space> ;

"Command mode
nnoremap ; :
"For moving between panes - programmatically
nnoremap zzz <space>
nnoremap <tab> <space>

" show all bookmarks
nmap bb :marks <cr>

" disable da - it deletes all in current dir by default
nmap da :<cr>

" copy files to the opposite pane
"nmap yy :!cp -r %f %D &<cr>
map yy :copy&<cr>

"synchronize panes
map s :sync!<cr>
map <c-s> :sync!<cr>

" move files to the opposite pane
"nmap ym :!mv %f %D<cr>
map ym :move<cr>

" make a backup copy file in the same pane
map yc :clone <cr>

" trash-cli to handle trash
"nmap D :!trash-put %f & <cr>
"nmap DR :!restore-trash & <cr>
"nmap DD :!trash-empty & <cr>

"Moving between panes
"nmap <c-h> <bs>
"nmap <c-h> <c-w>h
"nmap <c-l> <c-w>l
"nmap <c-j> <c-w>j
"nmap <c-k> <c-w>k

nmap <c-h> :navVsplitLeft <cr>
nmap <c-l> :navVsplitRight <cr>
nmap <c-j> :navSplitDown<cr>
nmap <c-k> :navSplitUp<cr>
" Open console in current directory
nnoremap ,t :!xterm &<cr>

"Open folder under cursor with vlc
"nmap <F4> :!vlc %f & %i<CR>
nmap iv :!vlc %f & %i<CR>
nmap isv :!vlc %f && sudo shutdown -h now & %i <CR>
map ig :!gimp %f %i<CR>

" quicker quitting program; it will resume where you left off
nmap q ZZ
nmap <c-q> ZZ

" The file type is for the default programs to be used with
" a file extension.
" :filetype pattern1,pattern2 defaultprogram,program2
" :fileviewer pattern1,pattern2 consoleviewer
" The other programs for the file type can be accessed with the :file command
" The command macros %f, %F, %d, %F may be used in the commands.
" The %a macro is ignored.  To use a % you must put %%.

" For automated FUSE mounts, you must register an extension with FILETYPE=..
" in one of following formats:
"
" :filetype extensions FUSE_MOUNT|some_mount_command using %SOURCE_FILE and %DESTINATION_DIR variables
" %SOURCE_FILE and %DESTINATION_DIR are filled in by vifm at runtime.
" A sample line might look like this:
 :filetype *.zip,*.jar,*.war,*.ear FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR
"Zip
fileviewer *.zip,*.jar,*.war,*.ear,*.oxt zip -sf %c

" Pdf
filextype *.pdf apvlv %c, zathura %c %i &, xpdf %c
fileviewer *.pdf pdftotext -nopgbrk %c -

"Video/mp3
:filextype *.avi,*.mp4,*.mpg,*.mp3,*.mkv,*.wmv,*.dat,*.3gp,*.ogv,*.vob,*.flv,*.m2v,*.mov,*.webm,*.ts,*m4v vlc %c %i

"Blender
:filextype *.blend,*.blend1,*.blend2,*.blend3,*.blend4,*blend4 blender %c %i

"Image
:filextype *.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm sxiv %f %i

"HTML
:filextype *.html,*.htm google-chrome %c %i &
":fileviewer *.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm
"         \ /usr/local/bin/open_in_irfanview.sh %c %i

" ArchiveMount
filetype *.tar,*.tar.bz2,*.tbz2,*.tgz,*.tar.gz,*.tar.xz,*.txz
       \ {Mount with archivemount}
       \ FUSE_MOUNT|archivemount %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.tgz,*.tar.gz tar -tzf %c
fileviewer *.tar.bz2,*.tbz2 tar -tjf %c
fileviewer *.tar.txz,*.txz xz --list %c

" Rar2FsMount and rar archives
filetype *.rar
       \ {Mount with rar2fs}
       \ FUSE_MOUNT|rar2fs %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.rar unrar v %c

" Fuse7z and 7z archives
filetype *.7z
       \ {Mount with fuse-7z}
       \ FUSE_MOUNT|fuse-7z %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.7z 7z l %c

" Office files
filextype *.odt,*.doc,*.docx,*.xls,*.xlsx,*.odp,*.pptx libreoffice %f &
fileviewer *.doc catdoc %c
fileviewer *.docx, docx2txt.pl %f -

" TuDu files
filetype *.tudu tudu -f %c

" Qt projects
filextype *.pro qtcreator %f &

" Directories
filextype */
        \ {View in thunar}
        \ Thunar %f &,
fileviewer .*/,*/ tree %f


:fileviewer *.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm
         \ vifm-w3mimgdisplay %px %py %pw %ph %c
"
" :filetype extensions FUSE_MOUNT2|some_mount_command using %PARAM and %DESTINATION_DIR variables
" %PARAM and %DESTINATION_DIR are filled in by vifm at runtime.
" A sample line might look like this:
" :filetype *.ssh FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR
" %PARAM value is filled from the first line of file (whole line).
" Example first line for SshMount filetype: root@127.0.0.1:/
"
" You can also add %CLEAR if you want to clear screen before running FUSE
" program.


" 256-color terminal
" fileviewer *.[ch],*.[ch]pp highlight -O xterm256 -s dante --syntax c %c
" fileviewer Makefile,Makefile.* highlight -O xterm256 -s dante --syntax make %c



" Open all other files with default system programs (you can also remove all
" :file[x]type commands above to ensure they don't interfere with system-wide
" settings).  By default all unknown files are opened with 'vi[x]cmd'
" uncommenting one of lines below will result in ignoring 'vi[x]cmd' option
" for unknown file types.
" For *nix:
" filetype * xdg-open
" For OS X:
" filetype * open
" For Windows:
" filetype * start, explorer

" What should be saved automatically between vifm runs
" Like in previous versions of vifm
" set vifminfo=options,filetypes,commands,bookmarks,tui,state,cs,chistory,shistory,dirstack,registers,phistory
" Like in vi
set vifminfo=bookmarks,chistory,shistory,phistory
